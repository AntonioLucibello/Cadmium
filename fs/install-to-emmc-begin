#!/bin/bash
set -e

# source the info file
. ~/info

# we need internet, TODO: make this run on voidlinux
nmcli device wifi rescan
nmtui connect

# a fancy hack
MMCDEV=$(ls /dev/mmcblk* | grep -F boot0 | sed 's/boot0//')

# give some time to userspace
sleep 1

if [ $OXIDE = 0 ]; then
	# zero out kernel partitions, just in case
	dd if=/dev/zero of=${MMCDEV} bs=512k count=128 seek=$EMMC_OFFSET

	# cgpt doesn't like if we don't do this
	parted --script ${MMCDEV} mklabel gpt >/dev/null 2>&1 || true

	# create partitions
	cgpt create ${MMCDEV}
	export PARTOFFSET=0
	cgpt add -i 3 -t data   -b $(expr 139264 + $EMMC_OFFSET)        -s $(expr $(cgpt show ${MMCDEV} | grep 'Sec GPT table' | awk '{print $1}') - $(expr 139264 + $EMMC_OFFSET)) -l Root ${MMCDEV}
else
	# fsck partition to make resize2fs happy
	e2fsck -f /dev/disk/by-partlabel/STATE
	# shrink stateful filesystem
	resize2fs /dev/disk/by-partlabel/STATE 32000M # TODO: ask user for this

	# shrink stateful partition, 2048 * megabytes with some margin for error
	cgpt add -i 1 -s 67108864 $MMCDEV # TODO: ask user for this
	export PARTOFFSET=$(cgpt show -q $MMCDEV | wc -l)
	export EMMC_OFFSET=$(expr $(cgpt show -i 1 $MMCDEV | grep -n1 start | awk '{print $2}' | tail -n1) + $(cgpt show -i 1 $MMCDEV | grep -n1 start | awk '{print $3}' | tail -n1) + $EMMC_OFFSET)
	cgpt add -i $(expr 3 + $PARTOFFSET) -t data     -b $(expr 139264 + $EMMC_OFFSET)        -s $(expr $(cgpt show ${MMCDEV} | grep 'Sec GPT table' | awk '{print $1}') - $(expr 139264 + $EMMC_OFFSET)) -l Root ${MMCDEV}

fi

	
	
cgpt add -i $(expr 1 + $PARTOFFSET) -t kernel	-b $(expr 8192 + $EMMC_OFFSET)		-s 65536 -l MMCKernelA -S 1 -T 2 -P 10	${MMCDEV}
cgpt add -i $(expr 2 + $PARTOFFSET) -t kernel	-b $(expr 73728 + $EMMC_OFFSET)		-s 65536 -l MMCKernelB -S 0 -T 2 -P 5	${MMCDEV}

sleep 1

# cgpt sometimes doesn't do this
partx -a ${MMCDEV} 2>/dev/null || true

sleep 1

export ROOTPART=${MMCDEV}p3

# f2fs time boiii
if [ "$TARGET" = "kevin" -o "$TARGET" = "lazor" ]; then

	mkfs.f2fs -f $ROOTPART -t 0 # kevin and lazor don't support discard on f2fs?
else
	mkfs.f2fs -f $ROOTPART
fi

mount $ROOTPART /mnt

mkdir -p /mnt/lib/firmware/
cp -r /lib/firmware/* /mnt/lib/firmware/

# copy modules over
mkdir -p /mnt/lib/modules/$(uname -r)/
cp -r /lib/modules/$(uname -r)/* /mnt/lib/modules/$(uname -r)/

# copy kernel from usb pendrive/hdd to internal emmc
dd if=/dev/zero of=/dev/disk/by-partlabel/MMCKernelA >/dev/null 2>&1 || true
dd if=/dev/disk/by-partlabel/SDKernelA of=/dev/disk/by-partlabel/MMCKernelA >/dev/null 2>&1

# end of install-to-emmc-begin
