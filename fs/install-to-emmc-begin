#!/bin/bash
set -e

# source the info file
. ~/info

# we need internet, TODO: make this run on voidlinux
nmcli device wifi rescan
nmtui connect

# a fancy hack
MMCDEV=$(ls /dev/mmcblk* | grep -F boot0 | sed 's/boot0//')

# give some time to userspace
sleep 1

# zero out kernel partitions, just in case
dd if=/dev/zero of=${MMCDEV} bs=512k count=128 seek=$EMMC_OFFSET

# cgpt doesn't like if we don't do this
parted --script ${MMCDEV} mklabel gpt >/dev/null 2>&1 || true

# create partitions
cgpt create ${MMCDEV}
cgpt add -i 1 -t kernel	-b $(expr 8192 + $EMMC_OFFSET)		-s 65536 -l MMCKernelA -S 1 -T 2 -P 10	${MMCDEV}
cgpt add -i 2 -t kernel	-b $(expr 73728 + $EMMC_OFFSET)		-s 65536 -l MMCKernelB -S 0 -T 2 -P 5	${MMCDEV}
cgpt add -i 3 -t data	-b $(expr 139264 + $EMMC_OFFSET)	-s $(expr $(cgpt show ${MMCDEV} | grep 'Sec GPT table' | awk '{print $1}') - $(expr 139264 + $EMMC_OFFSET)) -l Root ${MMCDEV}

sleep 1

# cgpt sometimes doesn't do this
partx -a ${MMCDEV} 2>/dev/null || true

sleep 1

# f2fs time boiii
if [ "$TARGET" = "kevin" ]; then
	mkfs.f2fs -f ${MMCDEV}p3
else
	mkfs.f2fs -f ${MMCDEV}p3 -t 0 # kevin doesn't support discard on f2fs?
fi
mount ${MMCDEV}p3 /mnt

mkdir -p /mnt/lib/firmware/
cp -r /lib/firmware/* /mnt/lib/firmware/

# copy modules over
mkdir -p /mnt/lib/modules/$(uname -r)/
cp -r /lib/modules/$(uname -r)/* /mnt/lib/modules/$(uname -r)/

# copy kernel from usb pendrive/hdd to internal emmc
dd if=/dev/zero of=${MMCDEV}p1 >/dev/null 2>&1 || true
dd if=/dev/disk/by-partlabel/SDKernelA of=${MMCDEV}p1 >/dev/null 2>&1

# end of install-to-emmc-begin
