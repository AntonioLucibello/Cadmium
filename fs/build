#!/bin/bash
CADMIUMROOT=$1
ROOTPART=$2

set -e
set -v

source $CADMIUMROOT/config

cd $CADMIUMROOT/tmp
mkdir -p root
mkfs.f2fs -f $ROOTPART
mount $ROOTPART root

# if we are on arm64 machine, don't use qemu to execute arm64 code
if [ "$(uname -m)" = "aarch64" ]; then
	echo "Running on ARM64 machine"
	foreign=''
else
	cp $(which qemu-aarch64-static) root/
	qemu=/qemu-aarch64-static
	foreign='--foreign'
	echo "Running on not-ARM64 machine"
fi

cd $CADMIUMROOT/tmp

# rootfs-specific setup
case "$ROOTFS" in
	debian)
		echo "Installing Debian"
		# debootstrap randomly exits with 1, so there's that || true
		debootstrap $foreign --arch=arm64 sid $CADMIUMROOT/tmp/root/ https://deb.debian.org/debian/ || true
		# probably it can be ran on target device with little shim that does that and then execs init
		chroot root/ /debootstrap/debootstrap --second-stage
		# preinstall packages to have wifi
		chroot root/ $qemu /bin/apt update
		chroot root/ $qemu /bin/apt install -y vim vboot-utils network-manager debootstrap parted f2fs-tools
	;;
	# let's explain this: when void is set, $V is set to -v, so it does 'grep -v musl', printing link without musl
	# when $V is not set, grep is 'grep musl', printing only link with musl
	void)
		V='-v'
	;& # fall-through
	void-musl)
		echo "Installing Void Linux"
		ROOTFS="$(curl -s -L https://voidlinux.org/download/ | grep aarch64 | tr '"' ' ' | awk '{print $3}' | grep $V musl)"
		if [ ! -f "$ROOTFS" ]; then
			rm void-aarch64$Vtar.xz || true
			wget $ROOTFS -O void-aarch64$V.tar.xz # musl: void-aarch64, non-musl: void-aarch64-v

		fi
		tar xvfp void-aarch64$V.tar.xz -C $CADMIUMROOT/tmp/root
		cp /etc/resolv.conf root/etc/resolv.conf
		chroot root/ $qemu /bin/xbps-install -Syu xbps
		chroot root/ $qemu /bin/xbps-install -yu
		chroot root/ $qemu /bin/xbps-install -y base-system
		chroot root/ $qemu /bin/xbps-remove -y base-voidstrap
		chroot root/ $qemu /bin/xbps-install -y vim NetworkManager parted f2fs-tools
	;;
esac

# remove root password, this is install medium so it's ok
chroot root/ $qemu /bin/passwd -d root


echo $TARGET > root/etc/hostname # set default hostname in kernel?


# board-specific setup
case "$TARGET" in
	duet)
		# qca6174 doesn't like upstream
		mkdir -p $CADMIUMROOT/tmp/root/lib/firmware/ath10k/QCA6174/hw3.0/
		cp $CADMIUMROOT/fs/firmware/qcom/* root/lib/firmware/ath10k/QCA6174/hw3.0/
		cp $CADMIUMROOT/fs/firmware/scp.img root/lib/firmware/
		
		# copy libinput config
		mkdir -p $CADMIUMROOT/tmp/root/etc/libinput
		cp $CADMIUMROOT/fs/local-overrides-duet.quirks root/etc/libinput/local-overrides.quirks	
	;;
esac

# copy installation scripts, double root is not a typo
cp $CADMIUMROOT/fs/install-* root/root/
chmod a+x root/root/install-*


#umount root # done elsewhere
