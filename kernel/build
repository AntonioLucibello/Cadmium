#!/bin/bash
CADMIUMROOT=$1

[ -z "$CADMIUMROOT" ] && echo "$0: First parameter has to be root dir of Cadmium" && exit 1

set -e

source $CADMIUMROOT/config

# set env vars
export ARCH=arm64
export CROSS_COMPILE=aarch64-linux-gnu-

mkdir -p tmp
cd $CADMIUMROOT/tmp


# check if kernel has been downloaded this week, if not download/update it
if [ "$(date +'%V%y')" != "$(cat kern-dl-date-$TARGET)" ]; then
	echo "Downloading kernel for $TARGET"
	rm -rf linux-$TARGET
	curl -L "$(curl -sL https://www.kernel.org/ | grep "Download complete tarball" | head -n1 | tr '"' ' ' | awk '{print $3}')" -o Linux-archive
	mkdir linux-$TARGET
	bsdtar xf Linux-archive --strip-components=1 -C linux-$TARGET
	echo $(date +'%V%y') > kern-dl-date-$TARGET

	cd linux-$TARGET

	if [ "$TARGET" = "duet" ]; then
		echo "Patching kernel with duet-specific patches"
		patch -p1 < $CADMIUMROOT/kernel/patches/01-add-mt8183.patch
		patch -p1 < $CADMIUMROOT/kernel/patches/02-add-it6505.patch
		patch -p1 < $CADMIUMROOT/kernel/patches/03-mmu-context-lifetime.patch
	fi
fi

cd $CADMIUMROOT/tmp/linux-$TARGET

[ -f .config ] || cp $CADMIUMROOT/kernel/config-$TARGET .config
cp $CADMIUMROOT/kernel/kernel-$TARGET.its kernel.its
cp $CADMIUMROOT/kernel/cmdline cmdline

#for x in $(ls $CADMIUMROOT/kernel/patches/); do
#	patch -p1 < $CADMIUMROOT/kernel/patches/$x
#done

#make nconfig # if you want to customize config just uncomment this

echo Bulding in $(pwd) with $(nproc) threads
time make -j$(nproc)

# make kernel partition
# yes this is stolen from solidhal's prawnos, that's how open source works :D
mkimage -D "-I dts -O dtb -p 2048" -f kernel.its vmlinux.uimg || true
dd if=/dev/zero of=bootloader.bin bs=512 count=1
vbutil_kernel --pack vmlinux.kpart \
	--version 1 \
	--vmlinuz vmlinux.uimg \
	--arch aarch64 \
	--keyblock /usr/share/vboot/devkeys/kernel.keyblock \
	--signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
	--config cmdline \
	--bootloader bootloader.bin
rm vmlinux.uimg

cp vmlinux.kpart $CADMIUMROOT/
